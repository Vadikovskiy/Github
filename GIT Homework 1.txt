GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
	в правом верхнем углу нажать "плюс" и выбрать New repository

 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/Vadikovskiy/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
	touch new.json

 7. Добавить файл под гит.
	git add new.json

 8. Закоммитить файл.
	git commit -m "add the first file"

 9. Отправить файл на внешний GitHub репозиторий.
	git push
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	cat >> new.json -> добавить информацию -> Enter -> ctrl C
 
 11. Отправить изменения на внешний репозиторий.
	git add new.json
	git commit -m "исправил содержимое файлов"
	git push
 
 12. Создать файл preferences.json
	touch preferences.json
 
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	cat >> preferences.json -> добавить информацию -> Enter -> ctrl C
 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
	cat >  sklls.json -> добавить информацию -> Enter -> ctrl C
 
 15. Отправить сразу 2 файла на внешний репозиторий.
	git add preferences.json sklls.json
	git commit -m "исправил содержимое файлов"
	git push
	
 16. На веб интерфейсе создать файл bug_report.json.
	Add file -> Create new file
 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	edit this file
 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	
 20. Синхронизировать внешний и локальный репозиторий JSON
	git fetch
	git pull

XML
 21. Создать внешний репозиторий c названием XML.
	в правом верхнем углу нажать "плюс" и выбрать New repository
	
 22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/Vadikovskiy/XML.git
	
 23. Внутри локального XML создать файл “new.xml”.
	touch new.xml

 24. Добавить файл под гит.
	git add new.xml
 
 25. Закоммитить файл.
	git commit -m "add the first xml file" 
 
 26. Отправить файл на внешний GitHub репозиторий.
	git push
 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	cat >> new.xml -> добавить информацию -> Enter -> ctrl C
 
 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m "добавил содержимое"
	git push
 
 29. Создать файл preferences.xml
	touch preferences.xml
 
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	cat >> preferences.xml -> добавить информацию -> Enter -> ctrl C
 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	cat > sklls.xml -> добавить информацию -> Enter -> ctrl C

 32. Сделать коммит в одну строку.
	git add preferences.xml sklls.xml&&git commit -m "создал 2 файла с содержимым"
 
 33. Отправить сразу 2 файла на внешний репозиторий.
	git push
  
 34. На веб интерфейсе создать файл bug_report.xml.
	Add file -> Create new file
 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	edit this file
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	
 38. Синхронизировать внешний и локальный репозиторий XML
	git fetch
	git pull
 
TXT
 1. Создать внешний репозиторий c названием TXT.
	в правом верхнем углу нажать "плюс" и выбрать New repository
	
 2. Клонировать репозиторий TXT на локальный компьютер.
	git clone https://github.com/Vadikovskiy/TXT.git
 
 3. Внутри локального TXT создать файл “new.txt”.
	touch new.txt
 
 4. Добавить файл под гит.
	git add new.txt
 
 5. Закоммитить файл.
	git commit -m "add the first txt file" 
 
 6. Отправить файл на внешний GitHub репозиторий.
	git push
 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	cat >> new.txt -> добавить информацию -> Enter -> ctrl C
	
 8. Отправить изменения на внешний репозиторий.
	git add new.txt
	git commit -m "add modified txt file"
	git push
	
 9. Создать файл preferences.txt
	touch preferences.txt
	
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	cat >> preferences.txt -> добавить информацию -> Enter -> ctrl C
	
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	cat > sklls.txt -> добавить информацию -> Enter -> ctrl C
	
 12. Сделать коммит в одну строку.
	git add preferences.txt sklls.txt&&git commit -m "создал 2 файла с содержимым"
	
 13. Отправить сразу 2 файла на внешний репозиторий.
	git push
	
 14. На веб интерфейсе создать файл bug_report.txt.
	Add file -> Create new file
	
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit new file
	
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
	edit this file
	
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Commit changes
	
 18. Синхронизировать внешний и локальный репозиторий TXT
	git fetch
	git pull
	
	===================================================================
	
	https://github.com/Vadikovskiy/JSON.git
	https://github.com/Vadikovskiy/XML.git
	https://github.com/Vadikovskiy/TXT.git
	
	@Vadikovskiy